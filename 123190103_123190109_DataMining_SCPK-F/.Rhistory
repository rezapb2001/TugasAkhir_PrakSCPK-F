setwd("~/")
setwd("E:/KULI ah/Sistem Cerdas dan Penunjang Keputusan/TA data mining")
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Navbar!",
tabPanel("Plot",
sidebarLayout(
sidebarPanel(
# Input: Select a file ----
fileInput("file1", "Choose CSV File",
multiple = FALSE,
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".csv")),
# Horizontal line ----
tags$hr(),
# Input: Checkbox if file has header ----
checkboxInput("header", "Header", TRUE),
# Input: Select separator ----
radioButtons("sep", "Separator",
choices = c(Comma = ",",
Semicolon = ";",
Tab = "\t"),
selected = ","),
# Input: Select quotes ----
radioButtons("quote", "Quote",
choices = c(None = "",
"Double Quote" = '"',
"Single Quote" = "'"),
selected = '"'),
# Horizontal line ----
tags$hr(),
# Input: Select number of rows to display ----
radioButtons("disp", "Display",
choices = c(Head = "head",
All = "all"),
selected = "head")
),
mainPanel(
tableOutput("contents")
)
)
),
tabPanel("Summary",
verbatimTextOutput("summ")
)
)
)
setwd("E:/KULI ah/Sistem Cerdas dan Penunjang Keputusan/TA data mining")
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Navbar!",
tabPanel("Plot",
sidebarLayout(
sidebarPanel(
# Input: Select a file ----
fileInput("file1", "Choose CSV File",
multiple = FALSE,
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".csv")),
# Horizontal line ----
tags$hr(),
# Input: Checkbox if file has header ----
checkboxInput("header", "Header", TRUE),
# Input: Select separator ----
radioButtons("sep", "Separator",
choices = c(Comma = ",",
Semicolon = ";",
Tab = "\t"),
selected = ","),
# Input: Select quotes ----
radioButtons("quote", "Quote",
choices = c(None = "",
"Double Quote" = '"',
"Single Quote" = "'"),
selected = '"'),
# Horizontal line ----
tags$hr(),
# Input: Select number of rows to display ----
radioButtons("disp", "Display",
choices = c(Head = "head",
All = "all"),
selected = "head")
),
mainPanel(
tableOutput("contents")
)
)
),
tabPanel("Summary",
verbatimTextOutput("summ")
)
)
)
shiny::runApp()
runApp()
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
runApp()
runApp()
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
runApp()
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
library(markdown)
library(shiny)
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
library(shiny)
library(markdown)
library(ggplot2)
runApp()
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
library(shinytheme)
runApp()
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
install.packages("shinythemes")
library(shinythemes)
runApp()
detach("package:shinythemes", unload = TRUE)
library(shinythemes)
runApp()
runApp()
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
runApp('E:/sinaujembar/R/R-Studio-Tutorial-master/Gui R Shiny/Gui_Regresi')
setwd("E:/KULI ah/Sistem Cerdas dan Penunjang Keputusan/TA data mining")
datalama <- read.csv("COVID-19 di Indonesia per provinsi 2 @kawalcovid19")
datalama <- read.csv("COVID-19 di Indonesia per provinsi 2 @kawalcovid19.csv")
View(datalama)
Ethnicity2 <- Ethnicity[r(1-463),]
databaru <- datalama[r(1-463),]
databaru <- datalama[(1-463),]
View(databaru)
setwd("E:/KULI ah/scrip R zuu")
print(Census.Data[1:10,1:2])
Census.Data <-read.csv("practical_data.csv")
print(Census.Data[1:10,1:2])
data.baru <- (datalama[1:10,1:2])
data.baru <- (datalama,1:10,)
data.baru <- (datalama,1:10)
data.baru <- (datalama 1:10)
data.baru <- datalama [1:10,]
View(data.baru)
View(datalama)
View(datalama)
View(datalama)
View(datalama)
databaru <- datalama[1:463,]
databaru <- datalama[,1:463]
datanew <- datalama[1,2,...,463,]
datanew <- datalama[1,2,463,]
datanew <- datalama[(1,463),(2,3)]
datanew <- datalama[r(1,463),c(2,3)]
datanew <- datalama[r(,c(1,463)]
datanew <- datalama[,c(1,463)]
datanew <- datalama[, c(1,463)]
datanew <- datalama[, c(1,2)]
datanew <- datalama[r(1;463),]
datanew <- datalama[r(1:463),]
datanew <- datalama[c(1:463),]
View(Census.Data)
View(datalama)
View(datalama)
View(Census.Data)
runApp('E:/KULI ah/Sistem Cerdas dan Penunjang Keputusan/TA data mining')
View(datalama)
sum(datalama)
summary(datalama)
datazuu <- read.csv("kawalcovid-data.csv")
setwd("E:/KULI ah/Sistem Cerdas dan Penunjang Keputusan")
setwd("E:/KULI ah/Sistem Cerdas dan Penunjang Keputusan/TA data mining")
datazuu <- read.csv("kawalcovid-data.csv")
View(datazuu)
dataakkk <- filter(datazuu[1,226])
datababa <- datazuu[(1:463),]
View(datababa)
View(datababa)
View(datababa)
View(datababa)
databagus <- datababa[,(1:35)]
View(databagus)
View(databagus)
names(databagus)[1] <- "Tanggal Kasus"
View(databagus)
View(databagus)
write.csv(databagus, "data_baru.csv", row.names=F)
runApp()
datababa$Aceh <- as.integer(datababa$Aceh)
datababa <- as.integer(datababa)
databagus <- as.integer(databagus)
write.csv(databagus, "data-baru.csv", row.names=F)
write.csv(databagus, "databaru.csv", row.names=F)
runApp()
datababa$Bali <- as.integer(datababa$Bali)
databagus$Aceh <- as.integer(datababa$Aceh)
databagus$Bali <- as.integer(databagus$Bali)
databagus$Aceh <- as.integer(datababa$Aceh)
summary(databagus)
databagus$Babel <- as.integer(databagus$Babel)
databagus$Banten <- as.integer(databagus$Banten)
databagus$Babel <- as.integer(databagus$Babel)
databagus$Bengkulu <- as.integer(databagus$Bengkulu)
databagus$DIY <- as.integer(databagus$DIY)
databagus$Jakarta <- as.integer(databagus$Jakarta)
databagus$Jambi <- as.integer(databagus$Jambi)
databagus$Jabar <- as.integer(databagus$Jabar)
databagus$Jateng <- as.integer(databagus$Jateng)
databagus$Jatim <- as.integer(databagus$Jatim)
databagus$Kalbar <- as.integer(databagus$Kalbar)
databagus$Kaltim <- as.integer(databagus$Kaltim)
databagus$Kalteng <- as.integer(databagus$Kalteng)
databagus$Kalsel <- as.integer(databagus$Kalsel)
databagus$Kaltara <- as.integer(databagus$Kaltara)
databagus$Kep.Riau <-as.integer(databagus$Kep.Riau)
databagus$NTB <- as.integer(databagus$NTB)
databagus$Sumsel <- as.integer(databagus$Sumsel)
databagus$Sumbar <- as.integer(databagus$Sumbar)
databagus$Sulut <- as.integer(databagus$Sulut)
databagus$Sumut <- as.integer(databagus$Sumut)
databagus$Sultra <- as.integer(databagus$Sultra)
databagus$Sulsel <- as.integer(databagus$Sulsel)
databagus$Sulteng <-as.integer(databagus$Sulteng)
databagus$Lampung <- as.integer(databagus$Lampung)
databagus$Riau <- as.integer(databagus$Riau)
databagus$Malut <- as.integer(databagus$Malut)
databagus$Maluku <- as.integer(databagus$Maluku)
databagus$Papbar <- as.integer(databagus$Papbar)
databagus$Papua <- as.integer(databagus$Papua)
databagus$Sulbar <- as.integer(databagus$Sulbar)
databagus$NTT <- as.integer(databagus$NTT)
databagus$Gorontalo <- as.integer(databagus$Gorontalo)
summary(databagus)
write.csv(databagus, "data_baru-bgt.csv", row.names=F)
runApp()
databagus$Aceh <- as.numeric(databagus$Aceh)
databagus$Bali <- as.numeric(databagus$Bali)
databagus$Babel <- as.numeric(databagus$Babel)
databagus$Banten <- as.numeric(databagus$Banten)
databagus$Bengkulu <- as.numeric(databagus$Bengkulu)
databagus$DIY <- as.numeric(databagus$DIY)
databagus$Jakarta <- as.numeric(databagus$Jakarta)
databagus$Jambi <- as.numeric(databagus$Jambi)
databagus$Jabar <- as.numeric(databagus$Jabar)
databagus$Jateng <- as.numeric(databagus$Jateng)
databagus$Jatim <- as.numeric(databagus$Jatim)
databagus$Kalbar <- as.numeric(databagus$Kalbar)
databagus$Kaltim <- as.numeric(databagus$Kaltim)
databagus$Kalteng <- as.numeric(databagus$Kalteng)
databagus$Kalsel <- as.numeric(databagus$Kalsel)
databagus$Kaltara <- as.numeric(databagus$Kaltara)
databagus$Kep.Riau <-as.numeric(databagus$Kep.Riau)
databagus$NTB <- as.numeric(databagus$NTB)
databagus$Sumsel <- as.numeric(databagus$Sumsel)
databagus$Sumbar <- as.numeric(databagus$Sumbar)
databagus$Sulut <- as.numeric(databagus$Sulut)
databagus$Sumut <- as.numeric(databagus$Sumut)
databagus$Sultra <- as.numeric(databagus$Sultra)
databagus$Sulsel <- as.numeric(databagus$Sulsel)
databagus$Sulteng <-as.numeric(databagus$Sulteng)
databagus$Lampung <- as.numeric(databagus$Lampung)
databagus$Riau <- as.numeric(databagus$Riau)
databagus$Malut <- as.numeric(databagus$Malut)
databagus$Maluku <- as.numeric(databagus$Maluku)
databagus$Papbar <- as.numeric(databagus$Papbar)
databagus$Papua <- as.numeric(databagus$Papua)
databagus$Sulbar <- as.numeric(databagus$Sulbar)
databagus$NTT <- as.numeric(databagus$NTT)
databagus$Gorontalo <- as.numeric(databagus$Gorontalo)
summary(databagus)
runApp()
colSums(is.na(databagus))
runApp()
runApp()
runApp()
ui <- fluidPage(theme = NULL,
navbarPage("Navbar!",
tabPanel("Plot",
sidebarLayout(
sidebarPanel(
# Input: Select a file ----
fileInput("file1", "Choose CSV File",
multiple = FALSE,
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".csv")),
# Horizontal line ----
tags$hr(),
# Input: Checkbox if file has header ----
checkboxInput("header", "Header", TRUE),
# Input: Select separator ----
radioButtons("sep", "Separator",
choices = c(Comma = ",",
Semicolon = ";",
Tab = "\t"),
selected = ","),
# Input: Select quotes ----
radioButtons("quote", "Quote",
choices = c(None = "",
"Double Quote" = '"',
"Single Quote" = "'"),
selected = '"'),
# Horizontal line ----
tags$hr(),
# Input: Select number of rows to display ----
radioButtons("disp", "Display",
choices = c(Head = "head",
All = "all"),
selected = "head")
),
mainPanel(
tableOutput("contents")
)
)
),
tabPanel("Summary",
verbatimTextOutput("summ")
),
tabPanel("Regresi",
sidebarLayout(
sidebarPanel(
textInput("x","Enter Variable Independen"),
textInput("y","Enter Variable Dependen")
),
mainPanel(
tableOutput(type = "tabs",
tabPanel("Model Summary", verbatimTextOutput("summary")),
tabPanel("Scatterplot", plotOutput("scatterplot")),
)
)
)
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
